name: CI

on:
  push:
    branches: [ci/effektiviser-workflow]
  pull_request:

jobs:
  setup:
    name: Install & Cache
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-deps.outputs.cache-hit }} # not needed for keying, but example
    steps:
      - uses: actions/checkout@v4

      # Cache Yarn dependencies
      - name: Get Yarn cache directory
        id: yarn-cache-dir
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Cache Yarn
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.yarn-cache-dir.outputs.dir }}
            **/node_modules
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-${{ runner.os }}-

      # Cache Nx/Lerna build artifacts
      - name: Cache Nx (or Lerna) build cache
        uses: actions/cache@v4
        with:
          path: |
            .nx/cache
            .turbo
            .lerna-cache
          key: build-cache-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            build-cache-${{ runner.os }}-

      # Install dependencies
      - run: yarn install --frozen-lockfile

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      # Restore caches from setup
      - name: Get Yarn cache directory
        id: yarn-cache-dir
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        with:
          path: |
            ${{ steps.yarn-cache-dir.outputs.dir }}
            **/node_modules
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: yarn-${{ runner.os }}-

      - uses: actions/cache@v4
        with:
          path: |
            .nx/cache
            .turbo
            .lerna-cache
          key: build-cache-${{ runner.os }}-${{ github.sha }}
          restore-keys: build-cache-${{ runner.os }}-

      - run: yarn test

  eslint:
    name: Run ESLint
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Get Yarn cache directory
        id: yarn-cache-dir
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        with:
          path: |
            ${{ steps.yarn-cache-dir.outputs.dir }}
            **/node_modules
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: yarn-${{ runner.os }}-
      - uses: actions/cache@v4
        with:
          path: |
            .nx/cache
            .turbo
            .lerna-cache
          key: build-cache-${{ runner.os }}-${{ github.sha }}
          restore-keys: build-cache-${{ runner.os }}-
      - run: yarn eslint .

  prettier:
    name: Run Prettier
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Get Yarn cache directory
        id: yarn-cache-dir
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        with:
          path: |
            ${{ steps.yarn-cache-dir.outputs.dir }}
            **/node_modules
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: yarn-${{ runner.os }}-
      - uses: actions/cache@v4
        with:
          path: |
            .nx/cache
            .turbo
            .lerna-cache
          key: build-cache-${{ runner.os }}-${{ github.sha }}
          restore-keys: build-cache-${{ runner.os }}-
      - run: yarn prettier --check .
