{"version":3,"file":"Table-647c89c2.js","sources":["../../src/table/TableRow.tsx","../../src/table/TableColumn.tsx","../../src/table/Table.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\nimport classnames from 'classnames/bind';\n\nimport styles from './tableRow.module.css';\n\nconst classNames = classnames.bind(styles);\n\nconst createMouseDownHandler =\n  <ID, MODEL>(onMouseDown?: (e: React.MouseEvent, id?: ID, model?: MODEL) => void, id?: ID, model?: MODEL) =>\n  (e: React.MouseEvent): void => {\n    if (onMouseDown && e.button === 0) {\n      onMouseDown(e, id, model);\n    }\n  };\n\n// @ts-ignore Fiks\nconst findNearestRow = (element: EventTarget<HTMLElement>) =>\n  element.tagName === 'TR' ? element : findNearestRow(element.parentElement);\n\nconst setFocus = (e: React.KeyboardEvent, isNext: boolean): void => {\n  const row = findNearestRow(e.target);\n  const otherRow = isNext ? row.nextSibling : row.previousSibling;\n  const element = otherRow || row;\n\n  if (element) {\n    element.focus();\n    e.preventDefault();\n  }\n};\n\nconst createKeyDownHandler =\n  <ID, MODEL>(\n    useMultiselect: boolean,\n    onKeyDown?: (e: React.KeyboardEvent, id?: ID, model?: MODEL) => void,\n    id?: ID,\n    model?: MODEL,\n  ) =>\n  (e: React.KeyboardEvent): void => {\n    if (e.key === 'ArrowDown') {\n      setFocus(e, true);\n    } else if (e.key === 'ArrowUp') {\n      setFocus(e, false);\n      // @ts-ignore Fiks\n    } else if (onKeyDown && e.target.tagName !== 'TD' && (e.key === 'Enter' || e.key === ' ')) {\n      onKeyDown(e, id, model);\n      e.preventDefault();\n      // @ts-ignore Fiks\n    } else if (useMultiselect && onKeyDown && e.target.tagName !== 'TD' && e.key === 'Shift') {\n      onKeyDown(e);\n      e.preventDefault();\n    }\n  };\n\nconst createKeyUpHandler =\n  <ID, MODEL>(onKeyDown?: (e: React.KeyboardEvent, id?: ID, model?: MODEL) => void) =>\n  (e: React.KeyboardEvent): void => {\n    // @ts-ignore Fiks\n    if (onKeyDown && e.target.tagName !== 'TD' && e.key === 'Shift') {\n      onKeyDown(e);\n      e.preventDefault();\n    }\n  };\n\nexport interface OwnProps<ID, MODEL = void> {\n  id?: ID;\n  model?: MODEL;\n  isHeader?: boolean;\n  hasGrayHeader?: boolean;\n  onMouseDown?: (e: React.MouseEvent, id?: ID, model?: MODEL) => void;\n  onKeyDown?: (e: React.KeyboardEvent, id?: ID, model?: MODEL) => void;\n  children: ReactNode | ReactNode[];\n  noHover?: boolean;\n  isSelected?: boolean;\n  isBold?: boolean;\n  isDashedBottomBorder?: boolean;\n  isSolidBottomBorder?: boolean;\n  isApLeftBorder?: boolean;\n  className?: string;\n  useMultiselect?: boolean;\n  hasNoBottomBorder?: boolean;\n}\n\n/**\n * TableRow\n *\n * Presentasjonskomponent. Tabellrad som brukes av komponenten Table.\n *\n * @deprecated Bruk heller tabellkomponent fra https://aksel.nav.no/komponenter/core/table\n */\nconst TableRow = <ID, MODEL = void>({\n  id,\n  model,\n  isHeader = false,\n  hasGrayHeader = false,\n  onMouseDown,\n  onKeyDown,\n  children,\n  noHover = false,\n  isSelected = false,\n  isBold = false,\n  isDashedBottomBorder = false,\n  isSolidBottomBorder = false,\n  isApLeftBorder = false,\n  className,\n  useMultiselect = false,\n  hasNoBottomBorder = false,\n}: OwnProps<ID, MODEL>) => (\n  <tr\n    className={classNames(className, styles.row, {\n      rowHeader: isHeader,\n      grayHeader: hasGrayHeader,\n      rowContent: !isHeader && !noHover,\n      selected: isSelected,\n      harHover: !noHover,\n      bold: isBold,\n      dashedBottomBorder: isDashedBottomBorder,\n      solidBottomBorder: isSolidBottomBorder,\n      noBottomBorder: hasNoBottomBorder,\n      apLeftBorder: isApLeftBorder,\n    })}\n    onMouseDown={createMouseDownHandler<ID, MODEL>(onMouseDown, id, model)}\n    onKeyDown={createKeyDownHandler<ID, MODEL>(useMultiselect, onKeyDown, id, model)}\n    onKeyUp={useMultiselect ? createKeyUpHandler<ID, MODEL>(onKeyDown) : undefined}\n    tabIndex={0}\n  >\n    {children}\n  </tr>\n);\n\nexport default TableRow;\n","import React, { ReactNode, FunctionComponent } from 'react';\nimport classnames from 'classnames/bind';\n\nimport styles from './tableColumn.module.css';\n\nconst classNames = classnames.bind(styles);\n\nexport interface OwnProps {\n  children?: number | string | ReactNode;\n  className?: string;\n  hidden?: boolean;\n  colspanAll?: boolean;\n}\n\n/**\n * TableColumn\n *\n * Presentasjonskomponent. Tabellkolonne som brukes av komponenten Table.\n *\n * @deprecated Bruk heller tabellkomponent fra https://aksel.nav.no/komponenter/core/table\n */\nconst TableColumn: FunctionComponent<OwnProps> = ({ children = '', className, hidden = false, colspanAll = false }) => {\n  if (hidden) {\n    return null;\n  }\n  return (\n    <td className={classNames(styles.columnStyle, className)} colSpan={colspanAll ? 100 : undefined}>\n      {children}\n    </td>\n  );\n};\n\nexport default TableColumn;\n","import React, { ReactElement } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classnames from 'classnames/bind';\n\nimport TableRow from './TableRow';\nimport TableColumn from './TableColumn';\n\nimport styles from './table.module.css';\n\nconst classNames = classnames.bind(styles);\n\nconst EMPTY_STRING = 'EMPTY';\n\nexport interface OwnProps {\n  headerTextCodes?: string[];\n  headerColumnContent?: ReactElement[];\n  children: ReactElement | ReactElement[];\n  classNameTable?: string;\n  noHover?: boolean;\n  hasGrayHeader?: boolean;\n}\n\n/**\n * Table\n *\n * Presentasjonskomponent. Definerer en tabell med rader og kolonner.\n *\n * @deprecated Bruk heller tabellkomponent fra https://aksel.nav.no/komponenter/core/table\n */\nconst Table = React.forwardRef<HTMLTableElement, OwnProps>(\n  (\n    {\n      headerTextCodes = [],\n      headerColumnContent = [],\n      classNameTable = '',\n      noHover = false,\n      hasGrayHeader = false,\n      children,\n    },\n    ref,\n  ) => (\n    <table ref={ref} className={classNames('table', { [classNameTable]: classNameTable, rowHover: !noHover })}>\n      <thead>\n        <TableRow isHeader noHover={noHover} hasGrayHeader={hasGrayHeader}>\n          {headerTextCodes.map(headerElement =>\n            typeof headerElement === 'string' && headerElement.startsWith(EMPTY_STRING) ? (\n              <TableColumn key={headerElement}>&nbsp;</TableColumn>\n            ) : (\n              <TableColumn key={headerElement}>\n                <FormattedMessage id={headerElement} />\n              </TableColumn>\n            ),\n          )}\n          {headerColumnContent.map(element => (\n            <TableColumn key={element.key}>{element}</TableColumn>\n          ))}\n        </TableRow>\n      </thead>\n      <tbody>\n        {Array.isArray(children)\n          ? React.Children.map(children, child => React.cloneElement(child as any, { noHover })) // NOSONAR\n          : React.cloneElement(children, { noHover })}\n      </tbody>\n    </table>\n  ),\n);\n\nexport default Table;\n"],"names":["classNames","classnames","styles","createMouseDownHandler","onMouseDown","id","model","e","findNearestRow","element","setFocus","isNext","row","createKeyDownHandler","useMultiselect","onKeyDown","createKeyUpHandler","TableRow","isHeader","hasGrayHeader","children","noHover","isSelected","isBold","isDashedBottomBorder","isSolidBottomBorder","isApLeftBorder","className","hasNoBottomBorder","jsx","TableColumn","hidden","colspanAll","EMPTY_STRING","Table","React","headerTextCodes","headerColumnContent","classNameTable","ref","jsxs","headerElement","FormattedMessage","child","Table$1"],"mappings":"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"}