{"version":3,"file":"SideMenu.stories-40e55433.js","sources":["../../../../node_modules/@navikt/aksel-icons/dist/react/esm/ExclamationmarkTriangleFill.js","../../src/side-menu/MenuLink.tsx","../../src/side-menu/SideMenu.tsx","../../src/side-menu/StatefulSideMenu.tsx"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgExclamationmarkTriangleFill = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M12 2.25a.75.75 0 0 1 .656.387l9.527 17.25A.75.75 0 0 1 21.526 21H2.474a.75.75 0 0 1-.657-1.113l9.526-17.25A.75.75 0 0 1 12 2.25ZM12 8.75a.75.75 0 0 1 .75.75v4a.75.75 0 0 1-1.5 0v-4a.75.75 0 0 1 .75-.75Zm-1 7.75a1 1 0 1 1 2 0 1 1 0 0 1-2 0Z\", fill: \"currentColor\" })));\n});\nexport default SvgExclamationmarkTriangleFill;\n","import { bemUtils } from '@navikt/ft-utils';\nimport classnames from 'classnames';\nimport { BodyShort, Label } from '@navikt/ds-react';\n\nimport React from 'react';\nimport styles from './menuLink.module.css';\n\ninterface MenuLinkProps {\n  label: string;\n  onClick: () => void;\n  active?: boolean;\n  icon?: React.ReactNode;\n  theme?: string;\n}\n\nconst menuLinkCls = bemUtils('menuLink');\n\nconst MenuLink = ({ label, active, onClick, icon, theme }: MenuLinkProps): JSX.Element => {\n  const arrowTheme = theme === 'arrow';\n  const handleOnClick = (event: React.FormEvent<HTMLButtonElement>): void => {\n    event.preventDefault();\n    onClick();\n  };\n\n  const labelCls = classnames(\n    active\n      ? `${styles[menuLinkCls.element('label')]} ${styles['menuLink__label--active']}`\n      : styles[menuLinkCls.element('label')],\n    {\n      [styles['menuLink__label--with-icon']]: !!icon,\n    },\n  );\n\n  const containerClassnames = classnames(styles[menuLinkCls.block], {\n    [styles[menuLinkCls.modifier('withArrows')]]: arrowTheme,\n  });\n\n  return (\n    <li className={containerClassnames} aria-current={active ? true : undefined}>\n      <button\n        className={\n          active\n            ? `${styles[menuLinkCls.element('button')]} ${styles['menuLink__button--active']}`\n            : styles[menuLinkCls.element('button')]\n        }\n        onClick={handleOnClick}\n        type=\"button\"\n        data-testid={active ? 'activeMenuItemButton' : undefined}\n      >\n        {arrowTheme && active ? (\n          <Label size=\"small\" as=\"span\" className={labelCls}>\n            {label}\n            {icon}\n          </Label>\n        ) : (\n          <BodyShort size=\"small\" as=\"span\" className={labelCls}>\n            {label}\n            {icon}\n          </BodyShort>\n        )}\n\n        {arrowTheme && active && <span className={styles[menuLinkCls.element('arrow-right')]} />}\n      </button>\n    </li>\n  );\n};\n\nexport default MenuLink;\n","import { bemUtils } from '@navikt/ft-utils';\nimport { BodyShort } from '@navikt/ds-react';\nimport React from 'react';\nimport classnames from 'classnames';\nimport MenuLink from './MenuLink';\nimport styles from './sideMenu.module.css';\n\nconst sideMenuCls = bemUtils('sideMenu');\n\nexport interface Link {\n  label: string;\n  active?: boolean;\n  icon?: React.ReactNode;\n}\n\nexport type ThemeProp = 'arrow';\n\ninterface SideMenuProps {\n  heading?: string;\n  links: Link[];\n  onClick: (index: number) => void;\n  theme?: ThemeProp;\n}\n\nconst SideMenu = ({ links, heading, onClick, theme }: SideMenuProps): JSX.Element => {\n  const sideMenuRootClassnames = classnames(\n    styles[sideMenuCls.block],\n    theme\n      ? {\n          [styles[sideMenuCls.modifier(theme)]]: theme,\n        }\n      : {},\n  );\n  return (\n    <div className={sideMenuRootClassnames}>\n      <nav className={styles[sideMenuCls.element('container')]}>\n        {heading && (\n          <BodyShort size=\"small\" className={styles[sideMenuCls.element('heading')]}>\n            {heading}\n          </BodyShort>\n        )}\n        <ul className={styles[sideMenuCls.element('link-list')]}>\n          {links.map(({ label, active, icon }, index) => (\n            <MenuLink\n              key={label.split(' ').join('')}\n              label={label}\n              active={active}\n              onClick={() => onClick(index)}\n              icon={icon}\n              theme={theme}\n            />\n          ))}\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default SideMenu;\n","import React from 'react';\nimport SideMenu, { Link, ThemeProp } from './SideMenu';\n\nexport interface StatefulSideMenuProps {\n  heading?: string;\n  links: Link[];\n  onClick: (index: number) => void;\n  theme?: ThemeProp;\n}\n\nconst StatefulSideMenu = ({ heading, links, onClick, theme }: StatefulSideMenuProps): JSX.Element => {\n  const [currentIndex, setCurrentIndex] = React.useState(0);\n  const handleOnClick = (index: number): void => {\n    setCurrentIndex(index);\n    onClick(index);\n  };\n\n  const getLinksWithActiveState = (): Link[] =>\n    links.map((link, index) => ({\n      ...link,\n      active: currentIndex === index,\n    }));\n\n  return <SideMenu heading={heading} links={getLinksWithActiveState()} onClick={handleOnClick} theme={theme} />;\n};\n\nexport default StatefulSideMenu;\n"],"names":["__rest","this","s","e","t","p","SvgExclamationmarkTriangleFill","forwardRef","_a","ref","title","_titleId","props","titleId","useId","React.createElement","ExclamationmarkTriangleFillIcon","menuLinkCls","bemUtils","MenuLink","label","active","onClick","icon","theme","arrowTheme","handleOnClick","event","labelCls","classnames","styles","containerClassnames","jsx","jsxs","Label","BodyShort","sideMenuCls","SideMenu","links","heading","sideMenuRootClassnames","index","StatefulSideMenu","currentIndex","setCurrentIndex","React","getLinksWithActiveState","link","StatefulSideMenuComponent"],"mappings":"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","x_google_ignoreList":[0]}