import{d as a}from"./dayjs.min-BFUBMDMt.js";import{r as h,n as f,y as c}from"./index.es-yTIDcLWJ.js";function v(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var d={exports:{}},O=d.exports,u;function x(){return u||(u=1,function(e,t){(function(r,l){e.exports=l()})(O,function(){return function(r,l){l.prototype.isSameOrAfter=function(s,o){return this.isSame(s,o)||this.isAfter(s,o)}}})}(d)),d.exports}var I=x();const y=v(I);var m={exports:{}},D=m.exports,g;function F(){return g||(g=1,function(e,t){(function(r,l){e.exports=l()})(D,function(){return function(r,l){l.prototype.isSameOrBefore=function(s,o){return this.isSame(s,o)||this.isBefore(s,o)}}})}(m)),m.exports}var S=F();const M=v(S),N="Dato må være før eller lik {limit}",P="Dato må være etter eller lik {limit}",q="Perioder kan ikke overlappe i tid",L="Perioder kan ikke overlappe i tid (uttak, utsettelse, gradering, overforing, opphold)",j="Dato må være lik {value}",T="Dato må skrives slik: dd.mm.åååå",B="Periode må skrives slik: dd.mm.åååå - dd.mm.åååå",E="Tallet kan ikke inneholde mer enn to desimaler",R="Tallet kan ikke ha desimaler",_="Feltet kan kun inneholde tall",b="Ugyldig fødselsnummer",A="Feltet må være et fødselsnummer (11 siffer)",U="Ugyldig organisasjonsnummer. Organisasjonsnummer må være 9 siffer.",V="Ugyldig organisasjonsnummer eller fødselsnummer",J="Startdato må være før eller lik sluttdato",Z="Periode er utenfor opptjeningsperioden",$="Ugyldig saksnummer eller fødselsnummer",w="Feltet inneholder ugyldige tegn: {text}",C="Feltet inneholder en ugyldig verdi: {value}",W="Feltet kan ikke inneholde mellomrom",z="Feltet må fylles ut",G="Du kan skrive maksimalt {length} tegn",H="Du må skrive minst {length} tegn",K="Du kan skrive maksimalt {length} tegn eller et fødselsnummer (11 siffer)",Q="Feltet må være mindre eller lik {length}",X="Feltet må være større eller lik {length}",Y="Fødselsnummer til den andre forelderen kan ikke være det samme som søker",ee={DateNotBeforeOrEqual:N,DateNotAfterOrEqual:P,DateRangesOverlapping:q,DateRangesOverlappingPeriodTypes:L,DatesNotEqual:j,InvalidDate:T,InvalidDatesInPeriod:B,InvalidDecimal:E,InvalidInteger:R,InvalidNumber:_,InvalidFodselsnr:b,InvalidFodselsnrFormat:A,InvalidOrgnr:U,InvalidOrgnrOrFodselsnr:V,InvalidPeriod:J,InvalidPeriodRange:Z,InvalidSaksnrOrFodselsnrFormat:$,InvalidText:w,InvalidValue:C,IllegalWhiteSpace:W,IsRequired:z,MaxLength:G,MinLength:H,MaxLengthOrFodselsnr:K,MaxValue:Q,MinValue:X,SammeFodselsnrSomSoker:Y},{formatMessage:n}=h(ee),te=e=>n({id:"DateNotBeforeOrEqual"},{limit:e}),re=e=>n({id:"DateNotAfterOrEqual"},{limit:e}),ne=()=>n({id:"InvalidDate"}),le=e=>n({id:"InvalidText"},{text:e}),ae=()=>n({id:"IsRequired"}),ie=e=>n({id:"MaxLength"},{length:e}),se=e=>n({id:"MinLength"},{length:e}),p=e=>n({id:"MaxValue"},{length:e}),oe=e=>n({id:"MinValue"},{length:e}),de=/(19|20)\d{2}-(0?[1-9]|1[0-2])-(0?[1-9]|1\d|2\d|3[01])$/,me=/^[\p{N}\p{L}\p{Z}.'\-/%§!?@_()+:;,="&\n]*$/u,ue=/[\p{N}\p{L}\p{Z}.'\-/%§!?@_()+:;,="&\n]*/gu,i=e=>e==null||e.toString().trim().length===0,ge=()=>a().startOf("day");a.extend(y);a.extend(M);const ke=e=>i(e)?ae():void 0,he=e=>t=>i(t)||t.toString().trim().length>=e?null:se(e),ce=e=>t=>i(t)||t.toString().trim().length<=e?null:ie(e),Oe=e=>t=>k(t)>=e?null:oe(e),xe=e=>t=>k(t)<=e?null:p(e),Ie=e=>t=>c(t)<=e?null:p(e),k=e=>typeof e=="string"?Number(e):e,ye=(e="")=>i(e)||de.test(e)?null:ne(),fe=e=>t=>{const r=a(e).endOf("day");return i(t)||a(t).isSameOrBefore(r)?null:te(r.format(f))},De=e=>t=>{const r=a(e).startOf("day");return i(t)||a(t).isSameOrAfter(r)?null:re(r.format(f))},Fe=e=>fe(ge())(e),Se=e=>{if(!me.test(e)){const t=e.replace(ue,"");return le(t.replace(/[\t]/g,"Tabulatortegn"))}return null};export{Fe as F,De as J,Se as N,ye as O,fe as R,he as a,Ie as d,Oe as i,xe as l,ce as o,ke as t};
