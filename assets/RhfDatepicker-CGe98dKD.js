import{u as M,a as N,r as d,d as r,x as s,b as i,c as S,j as u,D as g}from"./iframe-DOY3JjYl.js";import{c as O}from"./customParseFormat-B9XCtuVX.js";import{g as U,a as _}from"./formUtils-BlYJJKSx.js";import{R as A}from"./ReadOnlyField-B_ycYORc.js";r.extend(O);const z=({label:p,description:D,validate:m=[],hideLabel:c=!1,readOnly:q=!1,size:f="small",onChange:o,disabledDays:P,isEdited:b,defaultMonth:x,fromDate:v,toDate:l,...R})=>{const{name:y,control:k,disabled:h}=R,{formState:{errors:C}}=M(),{field:e}=N({name:y,control:k,rules:{validate:d.useMemo(()=>U(m),[m])}}),V=e.value?r(e.value,s,!0).format(i):"",[w,n]=d.useState(V),{datepickerProps:j,inputProps:E}=S({onDateChange:a=>{if(a!==void 0){const t=r(a).format(s);o&&o(t),e.onChange(t),n(r(t,s,!0).format(i))}},defaultSelected:e.value?r(e.value,s,!0).toDate():void 0,defaultMonth:x||(!e.value&&l?l:void 0),disabled:P}),F=d.useCallback(a=>{const t=r(a.target.value,i,!0).format(s),T=t!=="Invalid Date";n(a.target.value),o&&o(T?t:a.target.value),e.onChange(T?t:a.target.value)},[n,o,e]);if(q)return u.jsx(A,{label:p,value:e.value?r(e.value,s,!0).format(i):void 0,isEdited:b,hideLabel:c,size:f});const I={...j,fromDate:v,toDate:l,dropdownCaption:v&&l?!0:void 0};return u.jsx(g,{...I,children:u.jsx(g.Input,{...E,hideLabel:c,onChange:F,value:w,size:f,label:p,description:D,disabled:h,error:_(C,y)})})};z.__docgenInfo={description:"",methods:[],displayName:"RhfDatepicker",props:{label:{required:!1,tsType:{name:"ReactNode"},description:""},hideLabel:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},description:{required:!1,tsType:{name:"ReactNode"},description:""},size:{required:!1,tsType:{name:"union",raw:"'medium' | 'small'",elements:[{name:"literal",value:"'medium'"},{name:"literal",value:"'small'"}]},description:"",defaultValue:{value:"'small'",computed:!1}},readOnly:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: any) => void",signature:{arguments:[{type:{name:"any"},name:"value"}],return:{name:"void"}}},description:""},disabledDays:{required:!1,tsType:{name:"DatePickerProps['disabled']",raw:"DatePickerProps['disabled']"},description:""},isEdited:{required:!1,tsType:{name:"boolean"},description:""},validate:{required:!1,tsType:{name:"Array",elements:[{name:"unknown"}],raw:"((value: string) => ValidationReturnType)[]"},description:"",defaultValue:{value:"[]",computed:!1}},defaultMonth:{required:!1,tsType:{name:"Date"},description:""},fromDate:{required:!1,tsType:{name:"Date"},description:""},toDate:{required:!1,tsType:{name:"Date"},description:""},control:{required:!0,tsType:{name:"UseControllerProps['control']",raw:"UseControllerProps<T>['control']"},description:""}}};export{z as R};
