import{g as j,a as N,r as S}from"./formUtils-B1lrfALh.js";import{m as _,n as k,r as z,j as y,y as M}from"./iframe-aHYb1kIX.js";import{R as A}from"./ReadOnlyField-BmBGTH-9.js";const v=({name:u,control:b,label:o,validate:m=[],readOnly:T=!1,type:w,shouldValidateOnBlur:q=!1,onBlur:t,onChange:d,description:V,autoFocus:x,parse:p=r=>r,format:R=r=>r,normalizeOnBlur:c,isEdited:h,maxLength:C,autoComplete:D=!1,disabled:O,className:F,hideLabel:f,...g})=>{const{formState:{errors:r},trigger:E}=_(),{field:e}=k({name:u,control:b,rules:{validate:z.useMemo(()=>j(m),[m])}});return T?y.jsx(A,{label:o,value:e.value,isEdited:h,hideLabel:f,size:g.size}):y.jsx(M,{size:"small",hideLabel:f,description:V,label:o,error:N(r,u),...e,value:e.value?R(e.value):"",autoFocus:x,autoComplete:D?void 0:"off",maxLength:C,disabled:O,type:w,className:F,onChange:a=>{const n=a.currentTarget.value?p(a.currentTarget.value):null;return d&&d(n),e.onChange(n)},onBlur:async a=>{if(e.onBlur(),q){const n=await E();t&&n&&t(a?.target?.value)}else t&&t(a?.target?.value);c&&e.onChange(a?.target?.value?c(p(a?.target?.value)):null)},...g})};v.__docgenInfo={description:"",methods:[],displayName:"RhfTextField",props:{name:{required:!0,tsType:{name:"string"},description:""},label:{required:!1,tsType:{name:"union",raw:"string | ReactNode",elements:[{name:"string"},{name:"ReactNode"}]},description:""},validate:{required:!1,tsType:{name:"union",raw:"((value: string) => ValidationReturnType)[] | ((value: number) => ValidationReturnType)[]",elements:[{name:"Array",elements:[{name:"unknown"}],raw:"((value: string) => ValidationReturnType)[]"},{name:"Array",elements:[{name:"unknown"}],raw:"((value: number) => ValidationReturnType)[]"}]},description:"",defaultValue:{value:"[]",computed:!1}},readOnly:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},onBlur:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: any) => void",signature:{arguments:[{type:{name:"any"},name:"value"}],return:{name:"void"}}},description:""},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: any) => void",signature:{arguments:[{type:{name:"any"},name:"value"}],return:{name:"void"}}},description:""},shouldValidateOnBlur:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},autoFocus:{required:!1,tsType:{name:"boolean"},description:""},parse:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string | number) => string | number",signature:{arguments:[{type:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},name:"value"}],return:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]}}},description:"",defaultValue:{value:"value => value",computed:!1}},format:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => string",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"string"}}},description:"",defaultValue:{value:"value => value",computed:!1}},normalizeOnBlur:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string | number) => string | number",signature:{arguments:[{type:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},name:"value"}],return:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]}}},description:""},isEdited:{required:!1,tsType:{name:"boolean"},description:""},maxLength:{required:!1,tsType:{name:"number"},description:""},autoComplete:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},disabled:{required:!1,tsType:{name:"boolean"},description:""},type:{required:!1,tsType:{name:"union",raw:"'email' | 'password' | 'tel' | 'text' | 'url'",elements:[{name:"literal",value:"'email'"},{name:"literal",value:"'password'"},{name:"literal",value:"'tel'"},{name:"literal",value:"'text'"},{name:"literal",value:"'url'"}]},description:""},className:{required:!1,tsType:{name:"string"},description:""},hideLabel:{required:!1,tsType:{name:"boolean"},description:""},control:{required:!0,tsType:{name:"UseControllerProps['control']",raw:"UseControllerProps<T>['control']"},description:""}}};const H={component:v,tags:["autodocs"],decorators:S({testinputpre:"Hei hei"}),args:{control:void 0}},s={args:{label:"Dette er et inputfelt",name:"testinput"}},l={args:{label:"Dette er et inputfelt der verdi er valgt",name:"testinputpre"}},i={args:{label:"Dette er et inputfelt som er readonly",name:"testinputpre",readOnly:!0}};s.parameters={...s.parameters,docs:{...s.parameters?.docs,source:{originalSource:`{
  args: {
    label: 'Dette er et inputfelt',
    name: 'testinput'
  }
}`,...s.parameters?.docs?.source}}};l.parameters={...l.parameters,docs:{...l.parameters?.docs,source:{originalSource:`{
  args: {
    label: 'Dette er et inputfelt der verdi er valgt',
    name: 'testinputpre'
  }
}`,...l.parameters?.docs?.source}}};i.parameters={...i.parameters,docs:{...i.parameters?.docs,source:{originalSource:`{
  args: {
    label: 'Dette er et inputfelt som er readonly',
    name: 'testinputpre',
    readOnly: true
  }
}`,...i.parameters?.docs?.source}}};const I=["Default","MedVerdi","ReadOnly"];export{s as Default,l as MedVerdi,i as ReadOnly,I as __namedExportsOrder,H as default};
