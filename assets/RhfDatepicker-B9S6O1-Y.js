import{u as I,a as M,r as d,d as r,P as s,n as l,b as S,j as u,D as T}from"./iframe-BmpCVi_B.js";import{c as O}from"./customParseFormat-C1F3Pelv.js";import{g as U,a as _}from"./formUtils-BtzhobGF.js";import{R as A}from"./ReadOnlyField-BymwU2PL.js";r.extend(O);const z=({label:m,description:D,validate:p=[],hideLabel:c=!1,isReadOnly:q=!1,size:f="small",onChange:n,disabledDays:R,isEdited:P,defaultMonth:b,fromDate:v,toDate:o,...k})=>{const{name:y,control:w,disabled:x}=k,{formState:{errors:h}}=I(),{field:e}=M({name:y,control:w,rules:{validate:d.useMemo(()=>U(p),[p])}}),C=e.value?r(e.value,s,!0).format(l):"",[V,i]=d.useState(C),{datepickerProps:j,inputProps:N}=S({onDateChange:a=>{if(a!==void 0){const t=r(a).format(s);n&&n(t),e.onChange(t),i(r(t,s,!0).format(l))}},defaultSelected:e.value?r(e.value,s,!0).toDate():void 0,defaultMonth:b||(!e.value&&o?o:void 0),disabled:R}),E=d.useCallback(a=>{const t=r(a.target.value,l,!0).format(s),g=t!=="Invalid Date";i(a.target.value),n&&n(g?t:a.target.value),e.onChange(g?t:a.target.value)},[i,n,e]);if(q)return u.jsx(A,{label:m,value:e.value?r(e.value,s,!0).format(l):void 0,isEdited:P,hideLabel:c,size:f});const F={...j,fromDate:v,toDate:o,dropdownCaption:v&&o?!0:void 0};return u.jsx(T,{...F,children:u.jsx(T.Input,{...N,hideLabel:c,onChange:E,value:V,size:f,label:m,description:D,disabled:x,error:_(h,y)})})};z.__docgenInfo={description:"",methods:[],displayName:"RhfDatepicker",props:{label:{required:!1,tsType:{name:"union",raw:"string | ReactNode",elements:[{name:"string"},{name:"ReactNode"}]},description:""},hideLabel:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},description:{required:!1,tsType:{name:"union",raw:"string | ReactNode",elements:[{name:"string"},{name:"ReactNode"}]},description:""},size:{required:!1,tsType:{name:"union",raw:"'medium' | 'small'",elements:[{name:"literal",value:"'medium'"},{name:"literal",value:"'small'"}]},description:"",defaultValue:{value:"'small'",computed:!1}},isReadOnly:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: any) => void",signature:{arguments:[{type:{name:"any"},name:"value"}],return:{name:"void"}}},description:""},disabledDays:{required:!1,tsType:{name:"DatePickerProps['disabled']",raw:"DatePickerProps['disabled']"},description:""},isEdited:{required:!1,tsType:{name:"boolean"},description:""},validate:{required:!1,tsType:{name:"Array",elements:[{name:"unknown"}],raw:"((value: string) => ValidationReturnType)[]"},description:"",defaultValue:{value:"[]",computed:!1}},defaultMonth:{required:!1,tsType:{name:"Date"},description:""},fromDate:{required:!1,tsType:{name:"Date"},description:""},toDate:{required:!1,tsType:{name:"Date"},description:""},control:{required:!0,tsType:{name:"UseControllerProps['control']",raw:"UseControllerProps<T>['control']"},description:""}}};export{z as R};
